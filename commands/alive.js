const settings = require("../settings");
async function aliveCommand(sock, chatId, message) {
    try {
        const message1 = `*ü§ñ ·¥¢·¥ú·¥ã·¥Ä ·¥Ä…™ …™s ·¥Ä·¥Ñ·¥õ…™·¥†·¥á!*\n\n` +
                       `*·¥†·¥á Äs…™·¥è…¥:* ${settings.version}\n` +
                       `*s·¥õ·¥Ä·¥õ·¥ús:* Online\n` +
                       `*·¥ç·¥è·¥Ö·¥á:* Public\n\n` +
                       `*üåü “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás:*\n` +
                       `‚Ä¢ …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ\n` +
                       `‚Ä¢ ·¥Ä…¥·¥õ…™ ü…™…¥·¥ã ·¥ò Ä·¥è·¥õ·¥á·¥Ñ·¥õ…™·¥è…¥\n` +
                       `‚Ä¢ “ì·¥ú…¥ ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös\n` +
                       `‚Ä¢ ·¥Ä…¥·¥Ö ·¥ç·¥è Ä·¥á!\n\n` +
                       `·¥õ è·¥ò·¥á *.·¥ç·¥á…¥·¥ú* “ì·¥è Ä “ì·¥ú ü ü ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö  ü…™s·¥õ`;

        await sock.sendMessage(chatId, {
            text: message1,
            contextInfo: {
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363419125195694@newsletter',
                    newsletterName: '·¥¢·¥ú·¥ã·¥Ä ·¥Ä…™',
                    serverMessageId: -1
                }
            }
        }, { quoted: message });
    } catch (error) {
        console.error('Error in alive command:', error);
        await sock.sendMessage(chatId, { text: 'Bot is alive and running!' }, { quoted: message });
    }
}

module.exports = aliveCommand;